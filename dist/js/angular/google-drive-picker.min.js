function handleClientJSLoad(){isClientJS=!0;var e=document.createEvent("Events");e.initEvent("gapi.loaded",!0,!0),window.dispatchEvent(e)}if("undefined"==typeof CONFIG)var CONFIG={};!function(e){"use strict";e.module("risevision.widget.common.google-drive-picker",[]).directive("googleDrivePicker",["$window","$document","$log","$templateCache","apiAuth","apiGooglePicker",function(e,t,o,i,n,r){return{restrict:"E",scope:{viewId:"@"},template:i.get("google-drive-picker-template.html"),link:function(i,c,a){function u(e){r.get().then(function(t){e[t.picker.Response.ACTION]===t.picker.Action.PICKED?(o.debug("Files picked",e[t.picker.Response.DOCUMENTS]),i.$emit("picked",e[t.picker.Response.DOCUMENTS])):e[t.picker.Response.ACTION]===t.picker.Action.CANCEL&&(o.debug("File pick cancelled"),i.$emit("cancel"))})}function l(t){var o,i,r=d.createElement("a");d.referrer?(r.href=d.referrer,o=r.protocol+"//"+r.hostname):o=e.location.protocol+"//"+e.location.host,i=(new t.picker.PickerBuilder).setOrigin(o).addView(g).setOAuthToken(n.getAuthToken()).setCallback(u).build(),i.setVisible(!0)}var d=t[0],g=a.viewId||"docs";c.on("click",function(){n.getAuthToken()?r.get().then(l):n.getAuthToken()||n.authorize(!1).then(function(e){e&&!e.error&&r.get().then(l)})}),n.authorize(!0).then(null,function(e){o.warn(e)})}}}])}(angular),function(){try{app=angular.module("risevision.widget.common.google-drive-picker")}catch(e){app=angular.module("risevision.widget.common.google-drive-picker",[])}app.run(["$templateCache",function(e){"use strict";e.put("google-drive-picker-template.html",'<button type="button" class="btn btn-google-drive"></button>\n')}])}();var isClientJS=!1;!function(e){"use strict";e.module("risevision.widget.common.google-drive-picker").factory("oauthAPILoader",["$q","$log","gapiLoader",function(e,t,o){var i,n=e.defer(),r={get:function(){return i||(i=n.promise,o.get().then(function(e){e.load("auth",function(){t.info("auth API is loaded"),n.resolve(e)})})),i}};return r}]).factory("gapiLoader",["$q","$window",function(e,t){var o={get:function(){var o,i=e.defer();return t.isClientJS?i.resolve(t.gapi):(o=function(){i.resolve(t.gapi),t.removeEventListener("gapi.loaded",o,!1)},t.addEventListener("gapi.loaded",o,!1)),i.promise}};return o}]).factory("pickerLoader",["$q","$window","$log","gapiLoader",function(e,t,o,i){var n={get:function(){var t,n=e.defer();return t||(t=n.promise,i.get().then(function(e){e.load("picker",function(){o.info("picker API is loaded"),n.resolve(e)})})),t}};return n}])}(angular),function(e){"use strict";e.module("risevision.widget.common.google-drive-picker").value("CLIENT_ID","614513768474.apps.googleusercontent.com").value("SCOPE",["https://www.googleapis.com/auth/drive"]).factory("apiAuth",["$q","$http","$log","gapiLoader","oauthAPILoader","CLIENT_ID","SCOPE",function(e,t,o,i,n,r,c){var a=null,u={};return u.authorize=function(t){var i=e.defer(),u={client_id:r,scope:c,immediate:t};return n.get().then(function(e){e.auth.authorize(u,function(e){e&&!e.error?(a=e.access_token,i.resolve(e)):(i.reject("Authentication Error: "+e.error),o.debug("authorize result",e))})}),i.promise},u.getAuthToken=function(){return a},u}])}(angular),function(e){"use strict";e.module("risevision.widget.common.google-drive-picker").factory("apiGooglePicker",["$q","$window","$log","pickerLoader",function(e,t,o,i){var n,r=e.defer(),c={get:function(){return n||(n=r.promise,i.get().then(function(){r.resolve(t.google)})),n}};return c}])}(angular);